version: '3'
services:
  drone-server:
    container_name: dgci-drone
    image: drone/drone:1
    ports:
      - "${DRONE_PORT}:80"
    volumes:
      - ./drone/data:/var/lib/drone/
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_OPEN=true
      - DRONE_SERVER_HOST=drone-server
      - DRONE_DEBUG=true
      - DRONE_GIT_ALWAYS_AUTH=false
      - DRONE_GOGS=true
      - DRONE_GOGS_SKIP_VERIFY=false
      - DRONE_GOGS_SERVER=http://gogs:3000
      - DRONE_PROVIDER=gogs
      - DRONE_DATABASE_DATASOURCE=/var/lib/drone/drone.sqlite
      - DRONE_DATABASE_DRIVER=sqlite3
      - DRONE_SERVER_PROTO=http
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_RUNNER_CAPACITY=${DRONE_RUNNER_CAPACITY:-2}
  gogs:
    image: gogs/gogs
    container_name: dgci-gogs
    ports:
      - "${GOGS_SSH_PORT}:22"
      - "${GOGS_PORT}:3000"
    volumes:
      - ./gogs/data:/data
    depends_on:
      - mysql
  mysql:
    image: mysql:5.7.16
    container_name: dgci-mysql
    volumes:
      - ./mysql/data:/var/lib/mysql
    ports:
      - "${MYSQL_PORT}:3306"
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-123456}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-gogs}
      MYSQL_USER: ${MYSQL_USER:-gogs}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-gogs}
      TZ: Asia/Shanghai
  drone-agent:
    image: drone/agent:1
    container_name: dgci-agent
    depends_on:
      - drone-server
    environment:
      - DRONE_RPC_SERVER=http://drone-server
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_DEBUG=true
      - DOCKER_HOST=tcp://docker-bind:2375
  docker-bind:
     image: docker:dind
     container_name: dgci-bind
     privileged: true
     command: --registry-mirror=https://registry.docker-cn.com
     

